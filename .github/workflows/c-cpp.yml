name: C/C++ CI

on:
  push:
    tags:
      - 'v*'  # 只在以 "v" 开头的标签推送时触发

jobs:
  build:

    runs-on: windows-latest

    env:
      ARCH : win64
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install compiler
      uses: MinoruSekine/setup-scoop@v4.0.1
      with:
        buckets: extras
        apps: gcc gow

    - name: Verify Installation
      run: |
        gcc --version
        g++ --version
        make --version

    - name: build
      run: |
        make clean
        make all

    # 创建 ZIP 文件
    - name: Create ZIP file
      run: |
        $zipPath = "ReleasePackage.zip"
        Compress-Archive -Path "build/crc-gen.exe", "doc/crc-gen.pdf" -DestinationPath $zipPath

    # 创建 GitHub Releases
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}             # 使用从标签获取的版本号
        release_name: Release ${{ github.ref_name }} # 设置发布名称
        draft: false                                  # 设为 false 以创建真实发布
        prerelease: false                            # 设为 true 以创建预发布

    # 上传 ZIP 文件
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ReleasePackage.zip                          # ZIP 文件路径
        asset_name: crc_gen-${{ env.ARCH }}-${{ github.ref_name }}.zip    # 使用版本号命名
        asset_content_type: application/zip